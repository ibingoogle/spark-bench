<configuration>

<!-- miniBatchFraction(mBF) Configuration 
entry: LinearRegression.scala 
	def train(
      input: RDD[LabeledPoint],
      numIterations: Int): LinearRegressionModel 
-->
 	<property>
    	<description>(boolean)whether miniBatchFraction is stable(true) or dynamic(false), default is stable(true)</description>
    	<name>mBF.state</name>
    	<value>true</value>
  	</property>

  	<property>
    	<description>(double)stable value of miniBatchFraction, default value is 1.0</description>
    	<name>mBF.stable.value</name>
    	<value>1.0</value>
  	</property>

  	<property>
    	<description>(int)dynamics of miniBatchFraction, 0 is increased, 1 is decreased</description>
    	<name>mBF.dynamics</name>
    	<value>0</value>
  	</property>

<!-- stepsize Configuration 
entry:
-->
 	<property>
    	<description>(boolean)whether stepsize is stable as inital value(true) or dynamic(false), default is dynamic(false)</description>
    	<name>stepsize.state</name>
    	<value>false</value>
  	</property>

  	<property>
    	<description>(double)inital value of stepsize, default is 1.0</description>
    	<name>stepsize.inital.value</name>
    	<value>1.0</value>
  	</property>

  	<property>
    	<description>(int)dynamics of stepsize, 0 is increased, 1 is decreased(stepsize = stepsize/math.sqrt(iter)), default is 1</description>
    	<name>stepsize.dynamics</name>
    	<value>1</value>
  	</property>

<!-- converged check(cc) Configuration
entry: 
-->

 	<property>
   		<description>(boolean)whether check converged. default is true. If false, the followings are disabled</description>
   		<name>cc.state</name>
   		<value>true</value>
 	</property>

 	<property>
   		<description>(string)converged check based on which(change or goal). default is change.</description>
   		<name>cc.base</name>
   		<value>change</value>
 	</property>

	<!-- converged check(ccbc) based on change Configuration 
	entry: 
    -->

  	<property>
    	<description>(string)check the change of which one (weights or TotalLoss), default is weights</description>
    	<name>ccbc.which</name>
    	<value>weights</value>
  	</property>

  	<property>
    	<description>(double)criterion for weights check, default is 0.001</description>
    	<name>ccbc.weights.criterion</name>
    	<value>0.001</value>
  	</property>

  	<property>
    	<description>(double)criterion for TotalLoss check, default is 0.00001</description>
    	<name>ccbc.loss.criterion</name>
    	<value>0.00001</value>
  	</property>

	<!-- converged check(ccbg) based on goal of loss Configuration
	entry: 
    -->

  	<property>
    	<description>(double) the goal of loss. the value is based on input data and previous job</description>
    	<name>ccbg.goal</name>
    	<value>124261.05126729673</value>
  	</property>

  	<property>
    	<description>(double)criterion for goal of loss check, default is 0.00001</description>
    	<name>ccbg.criterion</name>
    	<value>0.00001</value>
  	</property>

</configuration>
